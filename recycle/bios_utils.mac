; Source name     : boot_utils.mac
; Code model:     : Real mode flat model
; Version         : 1.0
; Created date    : 28/11/2009
; Last update     : 28/11/2009
; Author          : Malcolm Spiteri
; Description     : Various macros for invoking BIOS services


; SET_PRE_ISR_HOOK - Goes to the IVT
; Params: 1 - The interupt number
;         2 - Old ISR segment
;         3 - Old ISR offset
;         4 - New ISR segment
;         5 - New ISR offset
%macro SET_PRE_ISR_HOOK 5
	;save registers
	push fs
	push ax
	push bx

	; Move fs:bx to the start of the interrupt entry (QWORD) we are interested in
	xor ax, ax ; first clear the AX register
	mov fs, ax ; load FS (far segment) with the address of interrupt vector table 
	mov bx, %1 ; load BX with interrupt type
	
	; Save the currently defined interrupt handler address
	mov ax, word [fs:bx] ; load AX with the offset of the currently defined interrupt
	mov %3, ax ; save the old interrupt offset
	mov ax, word [fs:bx+2] ; Load AX with the segment address of currently defined interrupt
	mov %2, ax ; store the old interrupt segment
	
	; Now, the interrupt vector table can be loaded with the new locations for our handler
	cli ; disable interrupts
	; load the lower interrupt pointer table word with the base address
	; (BBBBH) of the user's interrupt service routine
	mov WORD [fs:bx], %5 ; Set new ISR offset
	mov WORD [fs:bx+2], %4 ; Set new ISR segment
	sti ; re-enable interrupts 
	;restore registers
	pop bx
	pop ax
	pop fs
%endmacro
